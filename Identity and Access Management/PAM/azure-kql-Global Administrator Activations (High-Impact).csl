//Global Administrator Activations (High-Impact)
// Marius A. Skovli | Spirhed AS | https://spirhed.com
//03.10.2024
AuditLogs
| where Category == "RoleManagement"
| where OperationName in (
    "Add member to role completed (PIM activation)",
    "Add member to role requested (PIM activation)",
    "Remove member from role (PIM activation expired)"
)
| where tostring(parse_json(TargetResources[0]).displayName) == "Global Administrator"
| extend 
    User = tostring(parse_json(InitiatedBy.user).displayName),
    Role = tostring(parse_json(TargetResources[0]).displayName),
    RoleID = tostring(parse_json(TargetResources[0]).id),
    Justification = ResultDescription,
    StartTimeRaw = parse_json(AdditionalDetails[3]).value,
    ExpirationTimeRaw = parse_json(AdditionalDetails[4]).value,
    ActivationTime = TimeGenerated
// Convert raw time strings to datetime
| extend
    StartTime = todatetime(StartTimeRaw),
    ExpirationTime = todatetime(ExpirationTimeRaw)
// Format the dates and times
| extend
    FormattedStart = strcat("D: ", format_datetime(StartTime, 'dd.MM.yyyy'), " T: ", format_datetime(StartTime, 'HH.mm')),
    FormattedExpiration = strcat("D: ", format_datetime(ExpirationTime, 'dd.MM.yyyy'), " T: ", format_datetime(ExpirationTime, 'HH.mm'))
// Create the ActivationRange with formatted times
| extend
    ActivationRange = strcat(FormattedStart, " - ", FormattedExpiration)
// Calculate RequestedHours
| extend
    RequestedHours = datetime_diff('hour', ExpirationTime, StartTime)
// Format ActivationTime if needed
| extend
    ActivationTimeFormatted = strcat("D: ", format_datetime(ActivationTime, 'dd.MM.yyyy'), " T: ", format_datetime(ActivationTime, 'HH.mm'))
// Ensure ActivationTime is included in the project
| project User, Role, RoleID, Justification, ActivationRange, RequestedHours, ActivationTime, ActivationTimeFormatted
| order by ActivationTime desc
